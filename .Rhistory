print("测试")
myString <- "Hello, world!"
print(myString)
var.1 = c(0,1,2,3)
print(var.1)
var.2 <- c("learn", "R")
print(var.2)
c(TRUE,1) -> var.3
print(var.3)
print(ls())
rm(var.3)
print(ls())
q()
Rscript runoob-test.R
print(2e3)
5e-2
cat(1, "plus", 1, "equals", 2)
cat("RUNOOB", file="D:\\r_test.txt")
cat("RUNOOB", file="D:\\r_test.txt")
cat("GOOGLE", file="D:\\r_test.txt", append = TRUE)
sink("D:\\r_test.txt")
print("test")
print("test", split=TRUE)
print("22")
sink()
sink("D:\\r_test.txt", split = TRUE)
print("33")
sink()
readLines("D:\\r_test.txt")
print(getwd()0
print(getwd())
#comment
""
"
"
a = c(3,4)
b = c(5,0)
a + b
a = c(10,20,30,40,50)
a[2]
a[1:4]
a[c(1,3,5)]
a[c(-1,-5)]
c(1.1,1.2,1.3) - 0.5
a = c(1, 2)
a ^ 2
a = c(1, 3, 5, 2, 4, 6)
sort(a)
rev(a)
order(a)
a[order(a)]
sum(1:5)
sd(1:5)
range(1:5)
seq(1, 9, 2)
seq(0, 1, length.out = 3)
rep(0, 5)
length(c(NA, NA, NULL))
c(NA, NA, NULL, NA)
c(1, 2, 3) > 2
a = c(1, 2, 3)
b = a > 2
print(b)
print(a)
which(b)
b = a > 1
print(b)
which(b)
vector = c(10, 40, 78, 64, 53, 62, 69, 70)
print(vector[which(vector >= 60 & vector < 70)])
toupper("Runoob")
as.numeric("12")
as.character(12.34)
nchar("中文", type="bytes")
gsub("[[:alpha:]]+", "$", "Two words")
vector = c(1,2,3,4,5,6)
matrix(vector, 2, 3)
matrix(vector, 2, 3, byrow=TRUE)
m1 = matrix(vector, 2, 3, byrow=TRUE)
m1[1,1]
m1[1,3]
colnames(m1) = c("x", "y", "z")
rownames(m1) = c("a", "b")
m1
m1["a", ]
m1 = matrix(c(1, 2), 1, 2)
m1
m2 = matrix(c(3,4), 2, 1)
m2
m1 %*% m2
A = matrix(c(1, 3, 2, 4), 2, 2)
solve(A)
A
(A = matrix(c(1, 3, 2, 4), 2, 2))
apply(A, 1, sum)
apply(A, 2, sum)
x <- 50L
if(is.integer(x)) {
print("X 是一个整数")
}
x <- c("google", "runoob", "taobao")
if("runoob" %in% x) {
print("包含 runoob")
} else {
print("不包含 runoob")
}
if("weibo" %in% x) {
print("第一个if包含weibo")
} else if ("runoob" %in% x) {
print("第二个if包含runoob")
} else {
print("没有找到")
}
x <- switch(
3,
"google",
"runoob",
"taobao",
"weibo"
)
print(x)
you.like <- "runoob"
switch(you.like, google="www.google.com", runoob="www.runoob",taobao="taobao.com")
x <- switch(4, "google", "runoob", "taobao")
x
v <- c("Google", "Runoob")
cnt <- 2
repeat {
print(v)
cnt <- cnt+1
if(cnt > 5){
break
}
}
cnt <- 2
while (cnt < 7) {
print(v)
cnt = cnt + 1
}
v <- LETTERS[1:4]
for (i in v) {
print(i)
}
cnt <- 2
repeat{
print(v)
cnt <- cnt+1
if(cnt>5){
break
}
}
v <- LETTERS[1:6]
for(i in v){
if(i == "D"){
next
}
print(i)
}
print(seq(32,44))
new.function <- function(a) {}
new.function <- function(a) {
for(i in 1:a){
b<-i^2
print(b)
}
}
new.function(6)
a <- "Google"
b <- "Runoob"
c <- "Taobao"
print(paste(a,b,c))
print(paste(a,b,c, sep="-"))
result <- format(23,123456788, digits = 9)
print(result)
result <- format(23.123456788, digits = 9)
print(result)
result <- format(c(6, 13.14521), scientific = TRUE)
print(result)
result <- format(23.47, nsmall = 5)
print(result)
result <- format(6)
print(result)
result <- format(13.7, width = 6)
print(result)
result <- format("Runoob", width=9, justify="1")
result <- format("Runoob", width=9, justify="l")
print(result)
result <- format("Runoob", width=10, justify="c")
print(result)
result <- nachr("Google Runoob Taobao")
result <- nchar("Google Runoob Taobao")
print(result)
result <- substring("Runoob", 2, 5)
print(result)
list_data <- list("runoob", "google", c(11,22,33), 123, 51.23, 119.1)
print(list_data)
list_data <- list(c("Google", "Runoob", "Taobao"), matrix(c(1,2,3,4,5,6), nrow=2), list("runoob"m 12.3))
list_data <- list(c("Google", "Runoob", "Taobao"), matrix(c(1,2,3,4,5,6), nrow=2), list("runoob", 12.3))
names(list_data) <- c("Sites", "Numbers", "Lists")
print(list_data)
print(list_data[1])
print(list_data[3])
print(list_data$Numbers)
list_data[4] <- "新元素"
print(list_data)
list_data[4] <- NULL
print(list_data)
list_data[3] <- "我来替换第三个元素"
print(list_data)
list1 <- list(1,2,3)
list2 <- lsit("Google", "Runoob", "Taobao")
list2 <- list("Google", "Runoob", "Taobao")
merged.list <- c(list1, list2)
print(merged.list)
list1 <- list(1:5)
print(list1)
list2 <- list(10:14)
print(list2)
v1 <- unlist(list1)
v2 <- unlist(list2)
print(v1)
print(v2)
result <- v1 + v2
print(result)
M <- matrix(c(3:14), nrow = 4, byrow = TRUE)
print(M)
N <- matrix(c(3:14), nrow = 4, byrow = FALSE)
print(N)
rownames = c("row1", "row2", "row3", "row4")
colnames = c("col1", "col2", "col3")
P <- matrix(c(3:14), nrow = 4, byrow = TRUE, dimnames = list(rownames, colnames))
print(P)
M = matrix(c(2,6,5,1,10,4), nrow = 2, ncol = 3, byrow = TRUE)
print(M)
print(t(M))
matrix1 <- matrix(c(7, 9, -1, 4, 2, 3), nrow = 2)
matrix2 <- matrix(c(6, 1, 0, 9, 3, 2), nrow = 2)
print(matrix1)
print(matrix2)
result <- matrix1 + matrix2
print(result)
result <- matrix1 - matrix2
print(result)
vector <- c(5,9,3)
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
result <- array(c(vector1, vector2), dim=c(3,3,2))
print(result)
print(result[3,,2])
print(result[,,2])
new.array <- array(c(vector1,vector2),dim = c(3,3,2))
print(new.array)
result <- apply(new.array, c(1), sum)
print(result)
x <- c("男", "女", "男", "男", "女")
sex <- factor(x)
print(sex)
print(is.factor(sex))
sex = factor(c('f', 'm', 'f', 'f', 'm'), levels = c('f', 'm'), lables=c('female', 'male'),orederd=TRUE)
sex = factor(c('f', 'm', 'f', 'f', 'm'), levels = c('f', 'm'), labels=c('female', 'male'),orederd=TRUE)
sex = factor(c('f', 'm', 'f', 'f', 'm'), levels = c('f', 'm'), labels=c('female', 'male'),orderd=TRUE)
sex = factor(c('f', 'm', 'f', 'f', 'm'), levels = c('f', 'm'), labels=c('female', 'male'),ordered=TRUE)
print(sex)
v <- gl(3,4,labels = c("Google", "Runoob", "Taobao"))
print(v)
table = data.frame(
姓名 = c("张三","李四"),
工号 = c("001", "002"),
月薪 = c(1000, 2000)
)
print(table)
str(table)
print(summary(table))
result <- data.frame(table$姓名, table$月薪)
print(result)
result <- table[1:2,]
print(result)
table = data.frame(
姓名 = c("张三", "李四","王五"),
工号 = c("001","002","003"),
月薪 = c(1000, 2000,3000)
)
result <- table[c(2,3),c(1,2)]
print(result)
table$部门 <- c("运营", "技术", "编辑")
print(table)
sites <- c("Google","Runoob","Taobao")
likes <- c(222,111,123)
url <- c("www.google.com","www.runoob.com","www.taobao.com")
addresses <- cbind(sites, likes, url)
print(addresses)
table = data.frame(
姓名 = c("张三", "李四","王五"),
工号 = c("001","002","003"),
月薪 = c(1000, 2000,3000)
)
newtable = data.frame(
姓名 = c("小明", "小白"),
工号 = c("101","102"),
月薪 = c(5000, 7000)
)
result <- rbind(table, newtable)
print(result)
data <- read.csv("2-4.csv", encoding = "UTF-8")
data <- read.csv("ch2-4.csv", encoding = "UTF-8")
print(data)
names(data)[1] <- "t"
names(data)
print("提取2000年数据")
retval <- subset(data, t == 2000)
print(retval)
print("提取税收x2数据")
retval <- data$x2
print(retval)
print("提取2001至2008年x4数据")
retval <- subset(data$x4, t >= 2001 & t <= 2008)
retval <- subset(data, t >= 2001 & t <= 2008)
print(retval)
retval2 <- retval$x4
print(retval2)
print("(1)读入数据")
data <- read.csv("ch3-3.csv", encoding = "UTF-8")
print(data)
print(data)
print("(2)对年龄、月收入、月支出排序")
print("对年龄排序")
data[ order(data$年龄), ]
data[ order(data$月收入), ]
print("对月收入排序")
print("对月支出排序")
data[ order(data$月支出), ]
print("(3)筛选不同性别或不同受教育程度的人的观点")
print("筛选不同性别的人的观点")
retval <- subset(data, 性别 == "女")
print(retval)
result <- retval.frame(table$性别, table$观点)
result <- data.frame(table$性别, table$观点)
retval <- subset(data, 性别 == "男")
print(retval)
print("筛选不同受教育程度的观点")
retval <- subset(data, 受教育程度 == "低")
print(retval)
retval <- subset(data, 受教育程度 == "中")
print(retval)
retval <- subset(data, 受教育程度 == "高")
print(retval)
print("筛选 C地区、女性、受教育程度为中、观点为不支持的人")
retval <- subset(data, 地区 == "C" & 性别 == "女" & 受教育程度 == "中" & 观点 == "不支持")
print(retval)
print("(5) 对年龄、月收入、月支出进行分组")
data$age = cut(data$年龄, breaks(min(data$年龄), 40, max(data$年龄)))
data$age = cut(data$年龄, breaks = (min(data$年龄), 40, max(data$年龄)))
data$age = cut(data$年龄, breaks = c(min(data$年龄), 40, max(data$年龄)))
head(data)
print(data)
print("对年龄分组")
print("对月收入分组")
data$income = cut(data$月收入, breaks = c(0, 1000, 2000, max(data$月收入)))
data$income = cut(data$月收入, breaks = c(0, 1000, 2000, 5000))
head(data)
print("对月支出进行分组")
data$outcome = cut(data$月支出, breaks = c(0, 1500, 3000))
data$outcome = cut(data$月支出, breaks = c(0, 1500, 3000))
head(data)
print("(6) 删除观点中的缺失值")
is.na(head(data.NA$观点))
print(data)
is.na(head(data$观点))
data_na = na.omit(data)
print(data_na)
temp <- data[ order(data$年龄), ]
print(temp)
head(temp)
data <- read.csv("ch2-3.csv", encoding = "UTF-8")
print(data)
t1 = table(data$性别)
t1
t1[1]
gender = c(12, 12)
barplot(gender, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"))
print("对于性别的频数表")
Ftab(data$性别)
ftable(data$性别)
library()
install.packages("dstatR", repos = "https://mirrors.ustc.edu.cn/CRAN/")
Sys.which("make")
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("dstatR", repos = "https://mirrors.ustc.edu.cn/CRAN/")
source("dstatR2func.R")
Ftab(data$性别)
print(data)
data <- read.csv("ch2-3.csv", encoding = "UTF-8")
print(data)
Ftab(data$性别)
Ftab(data$数学)
Ftab(data$统计学)
t1 = table(data$性别)
t1
barplot(t1, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"))
library(showtext)
install.packages("showtext", repos = "https://mirrors.ustc.edu.cn/CRAN/")
library(showtext)
font_add("SyHei", "SourceHanSansSC-Bold.otf")
png(file = "gender-ratio.png")
showtext_begin();
barplot(t1, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"), family='SyHei')
showtext_end()
q()
source("dstatR2func.R")
data <- read.csv("ch2-3.csv", encoding = "UTF-8")
print(data)
t1 = table(data$性别)
t1
library(showtext)
font_add("SyHei", "SourceHanSansSC-Bold.otf")
showtext_begin()
png(file = "runoob-bar-cn.png")
showtext_begin()
barplot(t1, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"), family='SyHei')
showtext_end()
source("dstatR2func.R")
data <- read.csv("ch2-3.csv", encoding = "UTF-8")
print(data)
#(1)
t1 = table(data$性别)
t1
font_add("SyHei", "SourceHanSansSC-Bold.otf")
library(showtext)
font_add("SyHei", "SourceHanSansSC-Bold.otf")
barplot(t1, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"), family='SyHei')
q()
source("dstatR2func.R")
data <- read.csv("ch2-3.csv", encoding = "UTF-8")
print(data)
#(1)
t1 = table(data$性别)
t1
library(showtext)
font_add("SyHei", "SourceHanSansSC-Bold.otf")
png(file = "gender-ratio.png")
showtext_begin()
barplot(t1, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"), family='SyHei')
showtext_end()
q()
source("dstatR2func.R")
data <- read.csv("ch2-3.csv", encoding = "UTF-8")
print(data)
#(1)
t1 = table(data$性别)
t1
png(file = "gender-ratio.png")
barplot(t1, col = c("#FF0000", "#00FF00"), names.arg = c("女", "男"))
q()
